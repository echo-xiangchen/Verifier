TypeChecker.varMap: {((j >= m) and p)=(types.BoolType@26ba2a48, null), (q and p)=(types.BoolType@5f2050f6, null), (i * j)=(types.IntType@3b81a1bc, null), (1 + 3)=(types.IntType@64616ca2, null), (i * 2)=(types.IntType@13fee20c, null), (m * 9)=(types.IntType@4e04a765, null), (j < 20)=(types.BoolType@783e6358, null), (not q)=(types.BoolType@17550481, null), ((j < 20) or (m = 17))=(types.BoolType@735f7ae5, null), (not s)=(types.BoolType@180bc464, null), (not (i > 0))=(types.BoolType@1324409e, null), (j >= m)=(types.BoolType@2c6a3f77, null), (i > 0)=(types.BoolType@246ae04d, null), (((not q) and r) or s)=(types.BoolType@62043840, null), (i > j)=(types.BoolType@5315b42e, null), 17=(types.IntType@2ef9b8bc, null), i=(types.UnknowType@5d624da6, null), j=(types.IntType@1e67b872, logic.composite.Multiplication@60addb54), (m = (i * j))=(types.BoolType@3f2a3a5, null), m=(types.IntType@4cb2c100, logic.composite.Addition@6fb554cc), ((i > j) => (m = (i * j)))=(types.BoolType@614c5515, null), 0=(types.IntType@77b52d12, null), p=(types.BoolType@2d554825, logic.composite.Negation@68837a77), 1=(types.IntType@6be46e8f, null), q=(types.BoolType@3567135c, logic.composite.Implication@327471b5), (not p)=(types.BoolType@4157f54e, null), 2=(types.IntType@90f6bfd, null), r=(types.BoolType@47f6473, logic.composite.Conjunction@15975490), 3=(types.IntType@6b143ee9, null), s=(types.BoolType@1936f0f5, logic.composite.Disjunction@6615435c), (not r)=(types.BoolType@4909b8da, null), 4=(types.IntType@3a03464, null), 5=(types.IntType@2d3fcdbd, null), (3 * 4)=(types.IntType@617c74e5, null), 9=(types.IntType@6537cf78, null), (m = 17)=(types.BoolType@67b6d4ae, null), ((not q) and r)=(types.BoolType@34b7bfc0, null), ((((not q) and r) or s) => (not s))=(types.BoolType@366e2eef, null), ((3 * 4) + 5)=(types.IntType@6df97b55, null), 20=(types.IntType@3cbbc1e0, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Bool, i=Int, j=Int, k=Bool, m=Int, s1=Bool, r0=Bool}

Error: Type declaration of variable i is ambigous. Please make sure each variable is declared exactly once.
((j = i) => s)is not boolean type, cannot perform this assignment.
Error: Type of variable i in this expression is ambigous. Please make sure each variable is declared exactly once.
((i = m) = s1)is not boolean type, cannot perform this assignment.
Error: Type of variable i in this expression is ambigous. Please make sure each variable is declared exactly once.
Error: variable s1 has not been declared.
((m < i) and (not r))is not boolean type, cannot perform this assignment.
Error: Type of variable i in this expression is ambigous. Please make sure each variable is declared exactly once.
Error: variable r0 has not been declared.
Error: variable s1 has not been declared.
Error: variable k has not been declared.
