TypeChecker.varMap: {(not (m <= 0))=(types.BoolType@26ba2a48, null), (i * j)=(types.IntType@5f2050f6, null), (((not r0) and ((s1 => (not k)) = r)) or (i <= (j - m)))=(types.BoolType@3b81a1bc, null), (not k)=(types.BoolType@64616ca2, null), (p => ((m >= (i * j)) and (not (i <= m))))=(types.BoolType@13fee20c, null), ((q and (i <= j)) or (not (m <= 0)))=(types.BoolType@4e04a765, null), (not r0)=(types.BoolType@783e6358, null), (not (i <= m))=(types.BoolType@17550481, null), ((m >= (i * j)) and (not (i <= m)))=(types.BoolType@735f7ae5, null), (((not r) and (s or q)) = (p => ((m >= (i * j)) and (not (i <= m)))))=(types.BoolType@180bc464, null), (s1 => (not k))=(types.BoolType@1324409e, null), ((not r0) and ((s1 => (not k)) = r))=(types.BoolType@2c6a3f77, null), (i <= m)=(types.BoolType@246ae04d, null), s1=(types.BoolType@62043840, logic.composite.BoolTrue@5315b42e), 35=(types.IntType@2ef9b8bc, null), (m <= 0)=(types.BoolType@5d624da6, null), (s or q)=(types.BoolType@1e67b872, null), ((s1 => (not k)) = r)=(types.BoolType@60addb54, null), false=(types.BoolType@3f2a3a5, null), i=(types.IntType@4cb2c100, logic.composite.IntConst@6fb554cc), j=(types.IntType@614c5515, logic.composite.IntConst@77b52d12), k=(types.BoolType@2d554825, logic.composite.BoolFalse@68837a77), m=(types.IntType@6be46e8f, logic.composite.IntConst@3567135c), p=(types.BoolType@327471b5, logic.composite.BoolTrue@4157f54e), 0=(types.IntType@90f6bfd, null), 1=(types.IntType@47f6473, null), q=(types.BoolType@15975490, logic.composite.BoolFalse@6b143ee9), r=(types.BoolType@1936f0f5, logic.composite.BoolTrue@6615435c), s=(types.BoolType@4909b8da, logic.composite.BoolFalse@3a03464), (not r)=(types.BoolType@2d3fcdbd, null), (q and (i <= j))=(types.BoolType@617c74e5, null), (p = ((q and (i <= j)) or (not (m <= 0))))=(types.BoolType@6537cf78, null), (m >= (i * j))=(types.BoolType@67b6d4ae, null), 5=(types.IntType@34b7bfc0, null), (i <= (j - m))=(types.BoolType@366e2eef, null), true=(types.BoolType@6df97b55, null), ((not r) and (s or q))=(types.BoolType@3cbbc1e0, null), (i <= j)=(types.BoolType@35fb3008, null), r0=(types.BoolType@7225790e, logic.composite.BoolFalse@54a097cc), (j - m)=(types.IntType@36f6e879, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Bool, i=Int, j=Int, k=Bool, m=Int, s1=Bool, r0=Bool}

Formula: (p = ((q and (i <= j)) or (not (m <= 0)))) is a tautology.

Formula: (((not r) and (s or q)) = (p => ((m >= (i * j)) and (not (i <= m))))) is a tautology.

Formula: (((not r0) and ((s1 => (not k)) = r)) or (i <= (j - m))) is a tautology.

