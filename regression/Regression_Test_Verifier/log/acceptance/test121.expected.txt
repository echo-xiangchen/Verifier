TypeChecker.varMap: {(m < 0)=(types.BoolType@26ba2a48, null), (p = ((q and (i > j)) or (not (m < 0))))=(types.BoolType@5f2050f6, null), (i < (j - m))=(types.BoolType@3b81a1bc, null), (i * j)=(types.IntType@64616ca2, null), (not k)=(types.BoolType@13fee20c, null), (not r0)=(types.BoolType@4e04a765, null), (p => ((m < (i * j)) and (not (i < m))))=(types.BoolType@783e6358, null), ((m < (i * j)) and (not (i < m)))=(types.BoolType@17550481, null), (((not r) and (s or q)) = (p => ((m < (i * j)) and (not (i < m)))))=(types.BoolType@735f7ae5, null), (m < (i * j))=(types.BoolType@180bc464, null), (not (m < 0))=(types.BoolType@1324409e, null), s1=(types.BoolType@2c6a3f77, logic.composite.BoolTrue@246ae04d), 35=(types.IntType@62043840, null), (i > j)=(types.BoolType@5315b42e, null), (s or q)=(types.BoolType@2ef9b8bc, null), false=(types.BoolType@5d624da6, null), (((not r0) and (s1 => ((not k) = r))) or (i < (j - m)))=(types.BoolType@1e67b872, null), i=(types.IntType@60addb54, logic.composite.IntConst@3f2a3a5), j=(types.IntType@4cb2c100, logic.composite.IntConst@6fb554cc), k=(types.BoolType@614c5515, logic.composite.BoolFalse@77b52d12), m=(types.IntType@2d554825, logic.composite.IntConst@68837a77), p=(types.BoolType@6be46e8f, logic.composite.BoolTrue@3567135c), 0=(types.IntType@327471b5, null), 1=(types.IntType@4157f54e, null), q=(types.BoolType@90f6bfd, logic.composite.BoolFalse@47f6473), r=(types.BoolType@15975490, logic.composite.BoolTrue@6b143ee9), s=(types.BoolType@1936f0f5, logic.composite.BoolFalse@6615435c), (not r)=(types.BoolType@4909b8da, null), ((not r0) and (s1 => ((not k) = r)))=(types.BoolType@3a03464, null), 5=(types.IntType@2d3fcdbd, null), true=(types.BoolType@617c74e5, null), ((not r) and (s or q))=(types.BoolType@6537cf78, null), ((q and (i > j)) or (not (m < 0)))=(types.BoolType@67b6d4ae, null), (s1 => ((not k) = r))=(types.BoolType@34b7bfc0, null), (i < m)=(types.BoolType@366e2eef, null), (q and (i > j))=(types.BoolType@6df97b55, null), (not (i < m))=(types.BoolType@3cbbc1e0, null), r0=(types.BoolType@35fb3008, logic.composite.BoolFalse@7225790e), ((not k) = r)=(types.BoolType@54a097cc, null), (j - m)=(types.IntType@36f6e879, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Bool, i=Int, j=Int, k=Bool, m=Int, s1=Bool, r0=Bool}

Formula: (p = ((q and (i > j)) or (not (m < 0)))) is a tautology.

Formula: (((not r) and (s or q)) = (p => ((m < (i * j)) and (not (i < m))))) is a tautology.

Formula: (((not r0) and (s1 => ((not k) = r))) or (i < (j - m))) is a tautology.

