TypeChecker.varMap: {(p => ((not s) or q))=(types.BoolType@36d64342, null), (s => (not p))=(types.BoolType@39ba5a14, null), (((not p) => q) => s)=(types.BoolType@511baa65, null), p=(types.BoolType@340f438e, null), ((q => (s => (not p))) => (not q))=(types.BoolType@30c7da1e, null), q=(types.BoolType@5b464ce8, null), (not p)=(types.BoolType@57829d67, null), (not q)=(types.BoolType@19dfb72a, null), s=(types.BoolType@17c68925, null), (not s)=(types.BoolType@7e0ea639, null), ((not p) => q)=(types.BoolType@3d24753a, null), (q => (s => (not p)))=(types.BoolType@59a6e353, null), ((not s) or q)=(types.BoolType@7a0ac6e3, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, s=Bool}

Formula: (((not p) => q) => s)
Where: 
    p : BOOLEAN
    q : BOOLEAN
    s : BOOLEAN

Is not a tautology. Here is a counter example: 
    s : false
    p : true
    q : false

Formula: ((q => (s => (not p))) => (not q))
Where: 
    p : BOOLEAN
    q : BOOLEAN
    s : BOOLEAN

Is not a tautology. Here is a counter example: 
    q : true
    p : false
    s : false

Formula: (p => ((not s) or q))
Where: 
    p : BOOLEAN
    q : BOOLEAN
    s : BOOLEAN

Is not a tautology. Here is a counter example: 
    s : true
    q : false
    p : true

