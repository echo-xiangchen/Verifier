TypeChecker.varMap: {(i >= m)=(types.BoolType@13fee20c, null), (p or (m = (i * j)))=(types.BoolType@4e04a765, null), (12 * 2)=(types.IntType@783e6358, null), (4 * 10)=(types.IntType@17550481, null), ((5 * 6) - 9)=(types.IntType@735f7ae5, null), (not r0)=(types.BoolType@180bc464, null), (not q)=(types.BoolType@1324409e, null), (35 - (12 * 2))=(types.IntType@2c6a3f77, null), (i >= (j - 3))=(types.BoolType@246ae04d, null), ((4 * 10) / 2)=(types.IntType@62043840, null), (i = (j - m))=(types.BoolType@5315b42e, null), s1=(types.BoolType@2ef9b8bc, logic.composite.GreaterOrEqual@5d624da6), 10=(types.IntType@1e67b872, null), (i = (m - 7))=(types.BoolType@60addb54, null), (p and (not q))=(types.BoolType@3f2a3a5, null), (not (i >= m))=(types.BoolType@4cb2c100, null), 12=(types.IntType@6fb554cc, null), (i * (j + 5))=(types.IntType@614c5515, null), (s or q)=(types.BoolType@77b52d12, null), (not (m = 0))=(types.BoolType@2d554825, null), 0=(types.IntType@68837a77, null), 1=(types.IntType@6be46e8f, null), (1 + 9)=(types.IntType@3567135c, null), (not p)=(types.BoolType@327471b5, null), 2=(types.IntType@4157f54e, null), ((not p) => (q and p))=(types.BoolType@90f6bfd, null), 3=(types.IntType@47f6473, null), 4=(types.IntType@15975490, null), 5=(types.IntType@6b143ee9, null), 6=(types.IntType@1936f0f5, null), 7=(types.IntType@6615435c, null), true=(types.BoolType@4909b8da, null), (r and p)=(types.BoolType@3a03464, null), 9=(types.IntType@2d3fcdbd, null), ((r and p) = (q and p))=(types.BoolType@617c74e5, null), (q and p)=(types.BoolType@6537cf78, null), (i * j)=(types.IntType@67b6d4ae, null), (5 * 6)=(types.IntType@34b7bfc0, null), 35=(types.IntType@366e2eef, null), i=(types.IntType@6df97b55, logic.composite.Subtraction@3cbbc1e0), j=(types.IntType@35fb3008, logic.composite.Addition@7225790e), k=(types.UnknowType@54a097cc, null), (m = (i * j))=(types.BoolType@36f6e879, null), m=(types.IntType@5a61f5df, logic.composite.Subtraction@3551a94), (m = 0)=(types.BoolType@531be3c5, null), p=(types.BoolType@52af6cff, logic.composite.BoolTrue@735b478), q=(types.BoolType@2c9f9fb0, logic.composite.Negation@2096442d), (m - 7)=(types.IntType@9f70c54, null), r=(types.BoolType@234bef66, logic.composite.Implication@737996a0), s=(types.UnknowType@61dc03ce, null), (not r)=(types.BoolType@50f8360d, null), (j - 3)=(types.IntType@2cb4c3ab, null), (j + 5)=(types.IntType@13c78c0b, null), (m = (i * (j + 5)))=(types.BoolType@12843fce, null), ((not r) and (s or q))=(types.BoolType@3dd3bcd, null), ((p or (m = (i * j))) and (not (i >= m)))=(types.BoolType@97e1986, null), r0=(types.BoolType@26f67b76, logic.composite.Equal@153f5a29), (j - m)=(types.IntType@7f560810, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Int, i=Int, j=Int, k=Bool, m=Int, s1=Bool, r0=Bool}

Error: variable k has boolean type.
Error: Type declaration of variable s is ambigous. Please make sure each variable is declared exactly once.
Error: Type declaration of variable k is ambigous. Please make sure each variable is declared exactly once.
Error: Type of variable k in this expression is ambigous. Please make sure each variable is declared exactly once.
