TypeChecker.varMap: {(p => ((m = (i * j)) and (not (i = m))))=(types.BoolType@26ba2a48, null), (i * j)=(types.IntType@5f2050f6, null), (p = ((q and (i >= j)) or (not (m = 0))))=(types.BoolType@3b81a1bc, null), (not k)=(types.BoolType@64616ca2, null), (((not r) and (s or q)) = (p => ((m = (i * j)) and (not (i = m)))))=(types.BoolType@13fee20c, null), (not r0)=(types.BoolType@4e04a765, null), (not (i = m))=(types.BoolType@783e6358, null), (m * 5)=(types.IntType@17550481, null), (i = m)=(types.BoolType@735f7ae5, null), ((i = (j - (m * 5))) and (m = 35))=(types.BoolType@180bc464, null), s1=(types.BoolType@1324409e, logic.composite.BoolTrue@2c6a3f77), (i >= j)=(types.BoolType@246ae04d, null), (q and (i >= j))=(types.BoolType@62043840, null), 35=(types.IntType@5315b42e, null), (s or q)=(types.BoolType@2ef9b8bc, null), false=(types.BoolType@5d624da6, null), (i = (j - (m * 5)))=(types.BoolType@1e67b872, null), i=(types.IntType@60addb54, logic.composite.IntConst@3f2a3a5), j=(types.IntType@4cb2c100, logic.composite.IntConst@6fb554cc), (m = (i * j))=(types.BoolType@614c5515, null), k=(types.BoolType@77b52d12, logic.composite.BoolFalse@2d554825), m=(types.IntType@68837a77, logic.composite.IntConst@6be46e8f), (m = 0)=(types.BoolType@3567135c, null), (not (m = 0))=(types.BoolType@327471b5, null), p=(types.BoolType@4157f54e, logic.composite.BoolTrue@90f6bfd), 0=(types.IntType@47f6473, null), (j - (m * 5))=(types.IntType@15975490, null), 1=(types.IntType@6b143ee9, null), q=(types.BoolType@1936f0f5, logic.composite.BoolFalse@6615435c), r=(types.BoolType@4909b8da, logic.composite.BoolTrue@3a03464), ((m = (i * j)) and (not (i = m)))=(types.BoolType@2d3fcdbd, null), s=(types.BoolType@617c74e5, logic.composite.BoolFalse@6537cf78), (not r)=(types.BoolType@67b6d4ae, null), ((not r0) and (s1 => ((not k) = r)))=(types.BoolType@34b7bfc0, null), 5=(types.IntType@366e2eef, null), (m = 35)=(types.BoolType@6df97b55, null), true=(types.BoolType@3cbbc1e0, null), ((q and (i >= j)) or (not (m = 0)))=(types.BoolType@35fb3008, null), ((not r) and (s or q))=(types.BoolType@7225790e, null), (((not r0) and (s1 => ((not k) = r))) or ((i = (j - (m * 5))) and (m = 35)))=(types.BoolType@54a097cc, null), (s1 => ((not k) = r))=(types.BoolType@36f6e879, null), r0=(types.BoolType@5a61f5df, logic.composite.BoolFalse@3551a94), ((not k) = r)=(types.BoolType@531be3c5, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Bool, i=Int, j=Int, k=Bool, m=Int, s1=Bool, r0=Bool}

Formula: (p = ((q and (i >= j)) or (not (m = 0)))) is a tautology.

Formula: (((not r) and (s or q)) = (p => ((m = (i * j)) and (not (i = m))))) is a tautology.

Formula: (((not r0) and (s1 => ((not k) = r))) or ((i = (j - (m * 5))) and (m = 35))) is a tautology.

