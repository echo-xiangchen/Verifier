TypeChecker.varMap: {(i >= m)=(types.BoolType@5f2050f6, null), (m >= 0)=(types.BoolType@3b81a1bc, null), (not k)=(types.BoolType@64616ca2, null), (not r0)=(types.BoolType@13fee20c, null), s1=(types.BoolType@4e04a765, logic.composite.BoolTrue@783e6358), (not (i >= m))=(types.BoolType@17550481, null), 35=(types.IntType@735f7ae5, null), (s or q)=(types.BoolType@180bc464, null), false=(types.BoolType@1324409e, null), i=(types.IntType@2c6a3f77, logic.composite.IntConst@246ae04d), j=(types.UnknowType@62043840, null), k=(types.BoolType@5315b42e, logic.composite.BoolFalse@2ef9b8bc), m=(types.IntType@5d624da6, logic.composite.IntConst@1e67b872), (not (m >= 0))=(types.BoolType@60addb54, null), p=(types.UnknowType@3f2a3a5, null), 0=(types.IntType@4cb2c100, null), 1=(types.IntType@6fb554cc, null), q=(types.BoolType@614c5515, logic.composite.BoolFalse@77b52d12), r=(types.BoolType@2d554825, logic.composite.BoolTrue@68837a77), s=(types.UnknowType@6be46e8f, null), (not r)=(types.BoolType@3567135c, null), ((not r0) and (s1 => ((not k) = r)))=(types.BoolType@327471b5, null), 5=(types.IntType@4157f54e, null), true=(types.BoolType@90f6bfd, null), ((not r) and (s or q))=(types.BoolType@47f6473, null), (s1 => ((not k) = r))=(types.BoolType@15975490, null), r0=(types.BoolType@6b143ee9, logic.composite.BoolFalse@1936f0f5), 20=(types.IntType@6615435c, null), ((not k) = r)=(types.BoolType@4909b8da, null)}

AntlrToLogic.varMap: {p=Int, q=Bool, r=Bool, s=Int, i=Int, j=Bool, k=Bool, m=Int, s1=Bool, r0=Bool}

Error: Type declaration of variable j is ambigous. Please make sure each variable is declared exactly once.
Error: variable j has boolean type.
Error: Type declaration of variable p is ambigous. Please make sure each variable is declared exactly once.
Error: Type of variable p in this expression is ambigous. Please make sure each variable is declared exactly once.
Error: variable j has boolean type.
Error: Type declaration of variable s is ambigous. Please make sure each variable is declared exactly once.
Error: variable j has boolean type.
