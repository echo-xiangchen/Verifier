TypeChecker.varMap: {((not p) and p)=(types.BoolType@5b464ce8, null), (t1 => q)=(types.BoolType@57829d67, null), ((p and q) or (not p))=(types.BoolType@19dfb72a, null), (p and q)=(types.BoolType@17c68925, null), (p or q)=(types.BoolType@7e0ea639, null), (not t1)=(types.BoolType@3d24753a, null), (t1 or r)=(types.BoolType@59a6e353, null), p=(types.BoolType@7a0ac6e3, logic.composite.BoolTrue@71be98f5), (not p)=(types.BoolType@6fadae5d, null), q=(types.BoolType@17f6480, logic.composite.Conjunction@2d6e8792), r=(types.BoolType@2812cbfa, logic.composite.Disjunction@2acf57e3), ((t3 or t2) or (not t1))=(types.BoolType@506e6d5e, null), ((r or t1) or (not p))=(types.BoolType@96532d6, null), (q or (not p))=(types.BoolType@3796751b, null), true=(types.BoolType@67b64c45, null), (t3 or t2)=(types.BoolType@4411d970, null), (r or t1)=(types.BoolType@6442b0a6, null), (((r or t1) or (not p)) or q)=(types.BoolType@60f82f98, null), t1=(types.BoolType@35f983a6, logic.composite.Disjunction@7f690630), t2=(types.BoolType@edf4efb, logic.composite.Implication@2f7a2457), (p = t2)=(types.BoolType@566776ad, null), t3=(types.BoolType@6108b2d7, logic.composite.Iff@1554909b)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, t1=Bool, t2=Bool, t3=Bool}

Formula: (q or (not p))
Where: 
    p : BOOLEAN = true
    q : BOOLEAN = ((not p) and p)

Is not a tautology. Here is a counter example: 
    p : true
    q : false

Formula: (((r or t1) or (not p)) or q) is a tautology.

