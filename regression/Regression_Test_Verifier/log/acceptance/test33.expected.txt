TypeChecker.varMap: {(1 + 3)=(types.IntType@13969fbe, null), (i * 2)=(types.IntType@6aaa5eb0, null), (((p and q) and r) and (not s))=(types.BoolType@3498ed, null), (j < 20)=(types.BoolType@1a407d53, null), (not s)=(types.BoolType@3d8c7aca, null), (j >= m)=(types.BoolType@5ebec15, null), (i > 0)=(types.BoolType@21bcffb5, null), (j >= i)=(types.BoolType@380fb434, null), (p and q)=(types.BoolType@668bc3d5, null), i=(types.IntType@3cda1055, logic.composite.Addition@7a5d012c), j=(types.IntType@3fb6a447, logic.composite.Multiplication@79b4d0f), m=(types.IntType@6b2fad11, logic.composite.Addition@79698539), 0=(types.IntType@73f792cf, null), p=(types.BoolType@2ed94a8b, logic.composite.GreaterThan@38082d64), 1=(types.IntType@dfd3711, null), q=(types.BoolType@42d3bd8b, logic.composite.GreaterOrEqual@26ba2a48), 2=(types.IntType@5f2050f6, null), r=(types.BoolType@3b81a1bc, logic.composite.GreaterOrEqual@64616ca2), 3=(types.IntType@13fee20c, null), s=(types.BoolType@4e04a765, logic.composite.LessThan@783e6358), 4=(types.IntType@17550481, null), 5=(types.IntType@735f7ae5, null), ((p and q) and r)=(types.BoolType@180bc464, null), (3 * 4)=(types.IntType@1324409e, null), ((3 * 4) + 5)=(types.IntType@2c6a3f77, null), 20=(types.IntType@246ae04d, null)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, s=Bool, i=Int, j=Int, m=Int}

