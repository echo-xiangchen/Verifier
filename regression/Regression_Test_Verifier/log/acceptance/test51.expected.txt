TypeChecker.varMap: {(t1 => (not p))=(types.BoolType@3d24753a, null), (q => (not p))=(types.BoolType@59a6e353, null), ((r => (t1 => (not p))) => q)=(types.BoolType@7a0ac6e3, null), (t1 => q)=(types.BoolType@71be98f5, null), (t1 => r)=(types.BoolType@6fadae5d, null), (p and q)=(types.BoolType@17f6480, null), (p or q)=(types.BoolType@2d6e8792, null), (not t1)=(types.BoolType@2812cbfa, null), p=(types.BoolType@2acf57e3, logic.composite.BoolTrue@506e6d5e), (not p)=(types.BoolType@96532d6, null), q=(types.BoolType@3796751b, logic.composite.Implication@67b64c45), r=(types.BoolType@4411d970, logic.composite.Conjunction@6442b0a6), (t2 => (not t1))=(types.BoolType@60f82f98, null), ((not p) => p)=(types.BoolType@35f983a6, null), (r => (t1 => (not p)))=(types.BoolType@7f690630, null), (t3 => (t2 => (not t1)))=(types.BoolType@edf4efb, null), true=(types.BoolType@2f7a2457, null), t1=(types.BoolType@566776ad, logic.composite.Disjunction@6108b2d7), t2=(types.BoolType@1554909b, logic.composite.Implication@6bf256fa), (p = t2)=(types.BoolType@6cd8737, null), t3=(types.BoolType@22f71333, logic.composite.Iff@13969fbe)}

AntlrToLogic.varMap: {p=Bool, q=Bool, r=Bool, t1=Bool, t2=Bool, t3=Bool}

Formula: (q => (not p))
Where: 
    p : BOOLEAN = true
    q : BOOLEAN = ((not p) => p)

Is not a tautology. Here is a counter example: 
    p : true
    q : true

Formula: ((r => (t1 => (not p))) => q) is a tautology.

