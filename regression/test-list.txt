01 - 16: Variable declaration
17 - 26: Negation
27 - 36: Conjunction
37 - 46: Disjunction
47 - 56: Implication
57 - 66: Iff

67 - 72: Equal
73 - 78: Greater than
79 - 84: Less than
85 - 90: Greater or equal to
91 - 96: Less or equal to

97 - 106: Combination of propositional verifier (not, and, or, =>, <=>)
107 - 112: Combination of relational operator (=, >, <, >=, <=)

113 - 118: Propositional verifier containing greater than
119 - 124: Propositional verifier containing less than
125 - 130: Propositional verifier containing greater or equal to
131 - 136: Propositional verifier containing less or equal to
137 - 142: Propositional verifier containing equal

143 - 150: Propositional verifier using a mix of arithmetic operators

Gries-Theorems
151 - 155: Equivalence and true
156 - 162: Negation, Inequivalence, and false
163 - 171: Disjunction
172 - 191: Conjunction
192 - 217: Implication
218 - 220: Lerbniz as an axiom
221 - 224: Proof techniques
224 - 227: Quantification


228 - 231: Real number
232 - 235: Int number and Real number type check

236 - 240: Boolean Array
241 - 250: Integer Array
251 - 258: Real Array

259 - 261: Nested quantifier(nested exists)
262 - 264: Nested quantifier(nested forall)
265 - 267: Nested quantifier(nested forall and exists)
268 - 270: Nested quantifier(nested exists and forall)

271 - 283: Negation and nested quantifier 
284 - 295: Conjunction and nested quantifier
296 - 307: Disjunction and nested quantifier
308 - 319: Implication and nested quantifier
320 - 331: Iff and nested quantifier

332 - 336: increment_by_9
337 - 342: Old keyword (change_at)
343 - 347: Result keyword (return_array_value)
348 - 350: Old keyword(compare)
351 - 357: Sequential (swap)
358 - 361: Sequential (swap) and if-stat
362 - 368: if-else(lottery)
369 - 375: if-else(increment_x)
376 - 385: if-else(x_and_y)
386 - 395: if-else(weight_and_height)
396 - 405: if-else(boolean_operator)
406 - 415: if-else(age_and_weight)
416 - 425: if-else(bigger_smaller)
426 - 435: if-else(tax)
436 - 443: loop(increment_i)
444 - 451: loop(find_max)

















